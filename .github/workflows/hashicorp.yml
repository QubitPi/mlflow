# Copyright Jiaqi Liu
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
name: MLflow IaC Definition (HashiCorp)

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]

env:
  HASHICORP_PRODUCT_VERSION: "latest"

jobs:
  hashicorp:
    name: Publish MLflow AMI image and deploy it to EC2 through HashiCorp
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: hashicorp
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        if: github.ref == 'refs/heads/master'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEPLOY_REGION }}

      - name: Setup HashiCorp Packer
        uses: hashicorp/setup-packer@main
        with:
          version: ${{ env.HASHICORP_PRODUCT_VERSION }}
      - name: Initialize Packer configuration
        run: packer init .
        working-directory: hashicorp/images
      - name: Validate Packer template
        run: packer validate -var "aws_image_region=${{ secrets.AWS_IMAGE_REGION }}" .
        working-directory: hashicorp/images
      - name: Build and release AMI image
        if: github.ref == 'refs/heads/master'
        run: packer build -var "aws_image_region=${{ secrets.AWS_IMAGE_REGION }}" .
        working-directory: hashicorp/images

      - name: Setup HashiCorp Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.HASHICORP_PRODUCT_VERSION }}
      - name: Initialize Terraform configuration
        run: terraform init
        working-directory: hashicorp/instances
      - name: Validate Terraform template
        run: terraform validate
        working-directory: hashicorp/instances
      - name: Create EC2 instance
        if: github.ref == 'refs/heads/master'
        run: terraform apply -auto-approve -var="aws_deploy_region=${{ secrets.AWS_DEPLOY_REGION }}"
        working-directory: hashicorp/instances
